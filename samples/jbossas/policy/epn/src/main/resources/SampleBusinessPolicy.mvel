
if (event.operation == "submitOrder") {
	
	double total=event.properties.get("total");
	String customer=event.properties.get("customer");
	
	cm = epn.getService("CacheManager");
	
	// Attempt to lock the entry
	if (!cm.lock("Principals", customer)) {
		throw new Exception("Unable to lock entry for principal '"+customer+"'");
	}
	
	// Access the cache of principals
	principals = cm.getCache("Principals");
	
	principal = principals.get(customer);
	
	if (principal == null) {
		principal = new java.util.HashMap();
	}
	
	int current=principal.get("exposure");
	
	if (current == null) {
		current = 0;
	}
	
	int newtotal=current+total;
	
	principal.put("exposure", newtotal);
	principals.put(customer, principal);
	
	if (newtotal > 150 && current <= 150) {
		result = new org.overlord.bam.analytics.principal.PrincipalChangeNotification();
		result.setPrincipal(customer);
		result.setProperty("suspended", Boolean.TRUE);
		epn.forward(result);
	}
} else if (event.operation == "makePayment") {

	double amount=event.properties.get("amount");
	String customer=event.properties.get("customer");
		
	cm = epn.getService("CacheManager");
	
	// Attempt to lock the entry
	if (!cm.lock("Principals", customer)) {
		throw new Exception("Unable to lock entry for principal '"+customer+"'");
	}
	
	// Access the cache of principals
	principals = cm.getCache("Principals");
	
	principal = principals.get(customer);
	
	if (principal != null) {
		int current=principal.get("exposure");
		
		if (current != null) {
			int newamount=current-amount;
			
			principal.put("exposure", newamount);
			principals.put(customer, principal);
			
			if (newamount <= 150 && current > 150) {
				result = new org.overlord.bam.analytics.principal.PrincipalChangeNotification();
				result.setPrincipal(customer);
				result.setProperty("suspended", Boolean.FALSE);
				epn.forward(result);
			}
		}
	}
}

