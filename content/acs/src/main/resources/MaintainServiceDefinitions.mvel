// Key is null when the event source is a node within an EPN,
// so need to derive the key from the event (value)

org.overlord.rtgov.analytics.service.ServiceDefinition newsd=
	(org.overlord.rtgov.analytics.service.ServiceDefinition)value;
	
// Check interface has been defined, otherwise can't process the definition
if (newsd.getInterface() == null || newsd.getInterface().trim().length() == 0) {
	return;
}
	
org.overlord.rtgov.active.collection.ActiveMap map=
	(org.overlord.rtgov.active.collection.ActiveMap)acs.getActiveCollection();
	
org.overlord.rtgov.analytics.service.ServiceDefinition existingsd=
	(org.overlord.rtgov.analytics.service.ServiceDefinition)map.get(newsd.getInterface());

if (existingsd == null) {
	org.overlord.rtgov.analytics.service.ServiceDefinition sd=newsd.shallowCopy();
	sd.merge(newsd);
	acs.insert(newsd.getInterface(), sd);
} else {
	existingsd.merge(newsd);	
	acs.update(existingsd.getInterface(), existingsd);
}

// Update the current snapshot
currentSnapshot = variables.get("currentSnapshot");

if (currentSnapshot == null) {
	currentSnapshot = new java.util.HashMap();
	variables.put("currentSnapshot", currentSnapshot);
}

existingsd = currentSnapshot.get(newsd.getInterface());

if (existingsd == null) {
	org.overlord.rtgov.analytics.service.ServiceDefinition sd=newsd.shallowCopy();
	sd.merge(newsd);
	currentSnapshot.put(newsd.getInterface(), sd);
} else {
	existingsd.merge(newsd);
}

